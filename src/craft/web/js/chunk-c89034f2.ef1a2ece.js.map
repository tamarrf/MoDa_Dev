{"version":3,"sources":["webpack:///./node_modules/.pnpm/core-js@3.17.2/node_modules/core-js/internals/not-a-regexp.js","webpack:///./node_modules/.pnpm/core-js@3.17.2/node_modules/core-js/internals/is-regexp.js","webpack:///./node_modules/.pnpm/core-js@3.17.2/node_modules/core-js/internals/correct-is-regexp-logic.js","webpack:///./node_modules/.pnpm/core-js@3.17.2/node_modules/core-js/modules/es.array.includes.js","webpack:///./node_modules/.pnpm/core-js@3.17.2/node_modules/core-js/modules/es.string.includes.js","webpack:///./src/data/blockLibraries/wildfires.js"],"names":["isRegExp","module","exports","it","TypeError","isObject","classof","wellKnownSymbol","MATCH","undefined","METHOD_NAME","regexp","error1","error2","$","$includes","includes","addToUnscopables","target","proto","el","this","arguments","length","notARegExp","requireObjectCoercible","toString","correctIsRegExpLogic","forced","searchString","indexOf","wildfires","Blockly","Blocks","init","jsonInit","dataObj","parent","data","JSON","stringify","onchange","parse","getInput","count","getChildren","child","contentXml","Xml","domToText","blockToDom","defineBlocksWithJsonArray","netlogoGenerator","block","statement_members","statementToCode","code","INDENT","ifContents","JavaScript","prefixLines","elseContents","usedTreeOnFire","branchCode","conditionCode","n","inputList","valueToCode","ORDER_NONE","STATEMENT_SUFFIX","injectId"],"mappings":"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","file":"js/chunk-c89034f2.ef1a2ece.js","sourcesContent":["var isRegExp = require('../internals/is-regexp');\n\nmodule.exports = function (it) {\n  if (isRegExp(it)) {\n    throw TypeError(\"The method doesn't accept regular expressions\");\n  } return it;\n};\n","var isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.es/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\nmodule.exports = function (METHOD_NAME) {\n  var regexp = /./;\n  try {\n    '/./'[METHOD_NAME](regexp);\n  } catch (error1) {\n    try {\n      regexp[MATCH] = false;\n      return '/./'[METHOD_NAME](regexp);\n    } catch (error2) { /* empty */ }\n  } return false;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $includes = require('../internals/array-includes').includes;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.includes` method\n// https://tc39.es/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n","'use strict';\nvar $ = require('../internals/export');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\n\n// `String.prototype.includes` method\n// https://tc39.es/ecma262/#sec-string.prototype.includes\n$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~toString(requireObjectCoercible(this))\n      .indexOf(toString(notARegExp(searchString)), arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","import Blockly from 'blockly'\nimport { netlogoGenerator } from '@/blocklyHelpers/netlogoGenerator';\nexport let wildfires = {};\n\nwildfires = {\n    \"categories\": [\n        {\n            \"kind\": \"category\",\n            \"name\": \"Properties\",\n            \"categorystyle\": \"smoke_properties_category\",\n            \"expanded\": true,\n            \"contents\": [\n                {\n                    \"kind\": \"block\",\n                    \"type\": \"create_smoke\"\n                },\n                // {\n                //     \"kind\": \"block\",\n                //     \"type\": \"set_size\"\n                // },\n                // {\n                //     \"kind\": \"block\",\n                //     \"type\": \"set_type\"\n                // },\n                // {\n                //     \"kind\": \"block\",\n                //     \"type\": \"set_color\"\n                // },\n                // {\n                //     \"kind\": \"block\",\n                //     \"type\": \"set_heading\"\n                // },\n                // {\n                //     \"kind\": \"block\",\n                //     \"type\": \"relationship\"\n                // },\n                // {\n                //     \"kind\": \"block\",\n                //     \"type\": \"forward\"\n                // }\n            ]\n        },\n        {\n            \"kind\": \"category\",\n            \"name\": \"Action\",\n            \"categorystyle\": \"smoke_action_category\",\n            \"expanded\": true,\n            \"contents\": [\n                {\n                    \"kind\": \"block\",\n                    \"type\": \"spread_out\"\n                },\n                {\n                    \"kind\": \"block\",\n                    \"type\": \"get_blown\"\n                }\n            ]\n        },\n        {\n            \"kind\": \"category\",\n            \"name\": \"Control\",\n            \"categorystyle\": \"smoke_control_category\",\n            \"expanded\": true,\n            \"contents\": [\n                {\n                    \"kind\": \"block\",\n                    \"type\": \"for_smoke\"\n                }\n            ]\n        }\n    ]\n}\n\nBlockly.Blocks['create_smoke'] = {\n    init: function () {\n        this.jsonInit({\n            \"message0\": \"create smoke particles %1\",\n            \"args0\": [\n                {\n                    \"type\": \"input_dummy\",\n                    \"name\": \"EMPTY\"\n                }\n            ],\n            \"previousStatement\": null,\n            \"nextStatement\": null,\n            \"style\": \"tree_behavior_blocks\",\n            \"mutator\": \"general_mutator\",\n            \"tooltip\": \"\",\n            \"helpUrl\": \"\"\n        });\n        let dataObj = {\n            'unpackBlocks': [\n                {\n                    parent: 'temp_weight'\n                },\n                {\n                    parent: 'humidity_weight',\n                },\n                {\n                    parent: 'wind_weight_fire',\n                },\n            ],\n            'fieldData': {\n                'TEMP': 'NOEFFECT',\n                'T_WEIGHT': 1,\n                'HUMIDITY': 'NOEFFECT',\n                'H_WEIGHT': 1,\n                'WIND': 'NOEFFECT',\n                'W_WEIGHT': 1,\n                'CHANGED': false\n            },\n            'contentXml': ''\n        };\n        // define unpacked blocks and default values\n        this.data = JSON.stringify(dataObj);\n    },\n    onchange: function () {\n        const dataObj = JSON.parse(this.data);\n        // update connected blocks if visible\n        if (this.getInput('EXPANDED_STATEMENT')) {\n            let count = 0;\n            for (let child of this.getChildren()) {\n                if (count === 0) {\n                    dataObj.contentXml = Blockly.Xml.domToText(Blockly.Xml.blockToDom(child));\n                }\n                else {\n                    dataObj.contentXml += Blockly.Xml.domToText(Blockly.Xml.blockToDom(child));\n                }\n                ++count;\n            }\n        }\n        this.data = JSON.stringify(dataObj);\n    }\n}\n\nBlockly.Blocks['move'] = {\n    init: function () {\n        this.jsonInit({\n            \"message0\": \"move %1\",\n            \"args0\": [\n                {\n                    \"type\": \"input_dummy\",\n                    \"name\": \"EMPTY\"\n                }\n            ],\n            \"previousStatement\": null,\n            \"nextStatement\": null,\n            \"style\": \"smoke_behavior_blocks\",\n            \"mutator\": \"general_mutator\",\n        });\n        let dataObj = {\n            'unpackBlocks': [\n                {\n                    parent: 'diffusion'\n                },\n                {\n                    parent: 'wind_weight_move',\n                },\n            ],\n            'fieldData': {\n                'DIFFUSE': 'NOEFFECT',\n                'WIND': 'NOEFFECT',\n                'WEIGHT': 1,\n                'CHANGED': false\n            },\n            'contentXml': ''\n        };\n        // define unpacked blocks and default values\n        this.data = JSON.stringify(dataObj);\n    },\n    onchange: function () {\n        const dataObj = JSON.parse(this.data);\n        // update connected blocks if visible\n        if (this.getInput('EXPANDED_STATEMENT')) {\n            let count = 0;\n            for (let child of this.getChildren()) {\n                if (count === 0) {\n                    dataObj.contentXml = Blockly.Xml.domToText(Blockly.Xml.blockToDom(child));\n                }\n                else {\n                    dataObj.contentXml += Blockly.Xml.domToText(Blockly.Xml.blockToDom(child));\n                }\n                ++count;\n            }\n        }\n        this.data = JSON.stringify(dataObj);\n\n    }\n}\n\nBlockly.defineBlocksWithJsonArray([\n    {\n        \"type\":\"create_smoke\",\n        \"message0\": \"create smoke particles\",\n        \"previousStatement\": null,\n        \"nextStatement\": null,\n        \"tooltip\": \"\",\n        \"helpUrl\": \"\",\n        \"style\": \"smoke_behavior_blocks\"\n    },\n    {\n        \"type\":\"for_smoke\",\n        \"message0\":\"for smoke particles %1 %2\",\n        \"args0\": [\n            {\n                \"type\": \"input_dummy\"\n            },\n            {\n                \"type\":\"input_statement\",\n                \"name\": \"FOR\"\n            }\n        ],\n        \"previousStatement\": null,\n        \"nextStatement\": null,\n        \"style\": \"smoke_control_blocks\",\n        \"tooltip\": \"\",\n        \"helpUrl\": \"\"\n    },\n    {\n        \"type\": \"spread_out\",\n        \"message0\": \"spread out\",\n        \"previousStatement\": null,\n        \"nextStatement\": null,\n        \"tooltip\": \"\",\n        \"helpUrl\": \"\",\n        \"style\": \"smoke_action_blocks\"\n    },\n    {\n        \"type\": \"get_blown\",\n        \"message0\": \"get blown\",\n        \"previousStatement\": null,\n        \"nextStatement\": null,\n        \"tooltip\": \"\",\n        \"helpUrl\": \"\",\n        \"style\": \"smoke_action_blocks\"\n    },\n    {\n        \"type\": \"set_size\",\n        \"message0\": \"set size %1 µm\",\n        \"args0\": [\n            {\n                \"type\": \"field_slider\",\n                \"name\": \"SIZE\",\n                \"value\": 2,\n                \"min\": 1,\n                \"max\": 10,\n            },\n        ],\n        \"previousStatement\": null,\n        \"nextStatement\": null,\n        \"tooltip\": \"\",\n        \"helpUrl\": \"\",\n        \"style\": \"smoke_behavior_unpacked_blocks\"\n    },\n    {\n        \"type\": \"set_type\",\n        \"message0\": \"set type %1\",\n        \"args0\": [\n            {\n                \"type\":\"field_dropdown\",\n                \"name\": \"TYPE\",\n                \"options\": [\n                    [\n                        \"fine\",\n                        \"FINE\"\n                    ],\n                    [\n                        \"course\",\n                        \"COURSE\"\n                    ]\n                ]\n            }\n        ],\n        \"previousStatement\": null,\n        \"nextStatement\": null,\n        \"tooltip\": \"\",\n        \"helpUrl\": \"\",\n        \"style\": \"smoke_behavior_unpacked_blocks\"\n    },\n    {\n        \"type\": \"set_color\",\n        \"message0\": \"set color %1\",\n        \"args0\": [\n            {\n                \"type\": \"field_dropdown\",\n                \"name\": \"TYPE\",\n                \"options\": [\n                    [\n                        \"red\",\n                        \"RED\"\n                    ],\n                    [\n                        \"green\",\n                        \"GREEN\"\n                    ],\n                    [\n                        \"blue\",\n                        \"BLUE\"\n                    ],\n                    [\n                        \"gray\",\n                        \"GRAY\"\n                    ]\n                ]\n            }\n        ],\n        \"previousStatement\": null,\n        \"nextStatement\": null,\n        \"tooltip\": \"\",\n        \"helpUrl\": \"\",\n        \"style\": \"smoke_behavior_unpacked_blocks\"\n    },\n    {\n        \"type\": \"set_heading\",\n        \"message0\": \"set heading %1\",\n        \"args0\": [\n            {\n                \"type\": \"field_dropdown\",\n                \"name\": \"TYPE\",\n                \"options\": [\n                    [\n                        \"least particles\",\n                        \"LEASTPARTICLES\"\n                    ],\n                    [\n                        \"wind direction\",\n                        \"WINDDIRECTION\"\n                    ]\n                ]\n            }\n        ],\n        \"previousStatement\": null,\n        \"nextStatement\": null,\n        \"tooltip\": \"\",\n        \"helpUrl\": \"\",\n        \"style\": \"smoke_behavior_unpacked_blocks\"\n    },\n    {\n        \"type\": \"relationship\",\n        \"message0\": \"as size goes %1 %2 step size goes %3\",\n        \"args0\": [\n            {\n                \"type\": \"field_dropdown\",\n                \"name\": \"SIZE\",\n                \"options\": [\n                    [\n                        \"up\",\n                        \"UP\"\n                    ],\n                    [\n                        \"down\",\n                        \"DOWN\"\n                    ]\n                ]\n            },\n            {\n                \"type\": \"input_dummy\"\n            },\n            {\n                \"type\": \"field_dropdown\",\n                \"name\": \"STEPSIZE\",\n                \"options\": [\n                    [\n                        \"up\",\n                        \"UP\"\n                    ],\n                    [\n                        \"down\",\n                        \"DOWN\"\n                    ],\n                    [\n                        \"the same\",\n                        \"SAME\"\n                    ]\n                ]\n            }\n        ],\n        \"previousStatement\": null,\n        \"nextStatement\": null,\n        \"style\": \"smoke_action_unpacked_blocks\",\n        \"tooltip\": \"\",\n        \"helpUrl\": \"\"\n    },\n    {\n        \"type\": \"forward\",\n        \"message0\": \"forward\",\n        \"previousStatement\": null,\n        \"nextStatement\": null,\n        \"tooltip\": \"\",\n        \"helpUrl\": \"\",\n        \"style\": \"smoke_action_unpacked_blocks\"\n    },\n]);\n\n// GEN BLOCKS\n// Setup blocks\nnetlogoGenerator['set'] = function (block) {\n    const statement_members = netlogoGenerator.statementToCode(block, 'SET');\n    const code = 'to blocks-set\\n' +\n        netlogoGenerator.INDENT + 'setup\\n' +\n        statement_members +\n        netlogoGenerator.INDENT + 'reset-ticks\\n' +\n        'end\\n';\n    return code;\n};\nnetlogoGenerator['go'] = function (block) {\n    const statement_members = netlogoGenerator.statementToCode(block, 'GO');\n    const code = 'to blocks-go\\n' +\n        // netlogoGenerator.INDENT + 'mouse_click\\n' +\n        netlogoGenerator.INDENT + 'go\\n' +\n        statement_members +\n        netlogoGenerator.INDENT + 'tick-advance tick-delta\\n' +\n        netlogoGenerator.INDENT + 'display\\n' +\n        'end\\n';\n    return code;\n};\n\nnetlogoGenerator['mouse_click'] = function (block) {\n    let statement_members = netlogoGenerator.INDENT + 'set mouse-up? false\\n' + netlogoGenerator.statementToCode(block, 'MOUSE');\n\n    let ifContents = 'if mouse-down? \\n[\\n' +\n        statement_members + ']';\n    ifContents = Blockly.JavaScript.prefixLines(ifContents, netlogoGenerator.INDENT);\n\n    let elseContents = '[\\n' + netlogoGenerator.INDENT + 'if not mouse-down?\\n' + netlogoGenerator.INDENT + '[\\n' + netlogoGenerator.INDENT + netlogoGenerator.INDENT + 'set mouse-up? true\\n' + netlogoGenerator.INDENT + ']\\n' + ']\\n'\n    elseContents = Blockly.JavaScript.prefixLines(elseContents, netlogoGenerator.INDENT);\n    let code = 'ifelse mouse-up? != false' + '\\n[\\n' + ifContents + '\\n]\\n';\n\n    code = Blockly.JavaScript.prefixLines(\n        code, netlogoGenerator.INDENT) + elseContents;\n\n    // return 'to mouse_click\\n' + code + 'end\\n';\n    return 'to mouse_click\\n' + code + 'end\\n';\n};\n\n// If/elseif/else condition\nnetlogoGenerator['controls_if'] = function (block) {\n    let n = 0;\n    let usedTreeOnFire;\n    let code = '', branchCode, conditionCode;\n\n    if (block.inputList.length === 2) {\n        code += 'if ';\n    }\n    else {\n        code += '(ifelse ';\n    }\n\n    do {\n        conditionCode = netlogoGenerator.valueToCode(block, 'IF' + n,\n            netlogoGenerator.ORDER_NONE) || 'false';\n        usedTreeOnFire = conditionCode.includes('color != green and  color > (red - 5) and  color > (red - fire-intensity)');\n        branchCode = (usedTreeOnFire ? 'set tree-on-fire 1\\n' : 'set tree-on-fire 0\\n') + netlogoGenerator.statementToCode(block, 'DO' + n);\n        if (Blockly.JavaScript.STATEMENT_SUFFIX) {\n            branchCode = Blockly.JavaScript.prefixLines(\n                Blockly.JavaScript.injectId(Blockly.JavaScript.STATEMENT_SUFFIX,\n                    block), netlogoGenerator.INDENT) + branchCode;\n        }\n        code += (n > 0 ? '\\n' : '') + conditionCode + '\\n[\\n' + branchCode + ']';\n        n++;\n    } while (block.getInput('IF' + n));\n\n    if (block.getInput('ELSE') || Blockly.JavaScript.STATEMENT_SUFFIX) {\n        branchCode = netlogoGenerator.statementToCode(block, 'ELSE');\n        if (Blockly.JavaScript.STATEMENT_SUFFIX) {\n            branchCode = Blockly.JavaScript.prefixLines(\n                Blockly.JavaScript.injectId(Blockly.JavaScript.STATEMENT_SUFFIX,\n                    block), netlogoGenerator.INDENT) + branchCode;\n        }\n        code += '\\n[\\n' + branchCode + ']';\n    }\n\n    (block.inputList.length === 2) ? code += '\\n' : code += ')\\n';\n    return code;\n};\n\n// SMOKE PROPAGATION BLOCK DEFINITIONS\n// Properties\n// Create Smoke\nnetlogoGenerator['create_smoke'] = function () {\n    let code = 'set smoke-fine? true\\n' + \n        'set smoke-fine-size 2.5\\n' +\n        'set smoke-fine-color \"blue\"\\n'\n    return code;\n}\n// Action\nnetlogoGenerator['spread_out'] = function () {\n    return 'move-smoke-downhill\\n';\n}\n\nnetlogoGenerator['get_blown'] = function () {\n    return 'wind-effect\\n';\n}\n// Control\nnetlogoGenerator['for_smoke'] = function (block) {\n    const statement_members = netlogoGenerator.statementToCode(block, 'FOR');\n    let code = 'ask smokes' + '\\n' + '[\\n' + statement_members + ']\\n';\n    return code;\n}"],"sourceRoot":""}