{"version":3,"sources":["newusers/src/NewUsersWidget.js"],"names":["$","Craft","NewUsersWidget","Garnish","Base","extend","settings","startDate","$widget","$body","init","setSettings","$chartContainer","widgetId","$error","this","find","dateRange","appendTo","getDateByDays","endDate","Date","userGroupId","getDateValue","postActionRequest","requestData","textStatus","chart","charts","response","yAxis","error","formatter","removeClass","Area","d","format","Math","round","DataTable","dataTable","draw","chartSettings","dashboard","orientation","dataScale","scale","formats","chartDataTable","msg","grid","on","handleGridRefresh","bind","t","instances","html","data","destroy","push","resize","splice","inArray","base","days","date","getTime","floor","jQuery"],"mappings":"CAAA,SAACA,GAEGC,MAAAC,eAAAC,QAAAC,KAAAC,OAAA,CACMH,SAAAA,KACFI,KAAU,KACNC,UAFmC,KAGvCA,QAAW,KAGXC,QANuC,KAOvCC,MAPuC,KAUnCC,KAAKC,SAAYL,EAAjBA,GAYQ,OAVHE,KAAAA,YAAYF,GAEZM,KAAAA,QAALZ,EAAuBA,UAAEa,GACpBC,KAALL,MAAgBM,KAAAP,QAAAQ,KAAA,eAEZC,KAAAA,gBAAYjB,EAAciB,oCAA9BC,SAAAH,KAAAN,OAFAM,KAAKD,OAASd,EAAE,wBAAwBkB,SAASH,KAAKN,OAKlDM,KAAAT,SAAAW,WAGI,IAAA,KAFAF,KAAKR,UAAYN,MAAMC,eAAeiB,cAAc,GAIxDJ,KAAAK,QAAA,IAAAC,KACSd,MAEL,IAAA,MAFAQ,KAAKR,UAAYN,MAAMC,eAAeiB,cAAc,IAInDJ,KAALK,QAAA,IAAAC,KACSd,MAEL,IAAA,WAFAQ,KAAKR,UAAYN,MAAMC,eAAeiB,cAAc,IAInDJ,KAALK,QAAAnB,MAAAC,eAAAiB,cAAA,GACSZ,MAEL,IAAA,YAGRQ,KAAAR,UAAAN,MAAAC,eAAAiB,cAAA,IAJQJ,KAAKK,QAAUnB,MAAMC,eAAeiB,cAAc,IAQtDG,IAAAA,EAAkBhB,CAHtBC,UAAAN,MAAAC,eAAAqB,aAAAR,KAAAR,WAMMiB,QAAAA,MAAkBtB,eAAAqB,aAA6BE,KAAAA,SAC7CC,YAAeX,KAAAT,SAAagB,aAI5BrB,MAAK0B,kBAAkBC,4BAAVH,EAA4C,CAAAI,EAAAH,KACrDI,GAAO,YAAAJ,QAAA,IAAAG,EAAAE,MAAA,CACHC,KAAWpB,gBAAAqB,YAAgB,UAFnClB,KAAKY,MAAQ,IAAI1B,MAAM2B,OAAOM,KAAKnB,KAAKH,gBAAiB,CAMpCkB,MAAQ,CACHE,UAAN,SAAAL,GACH,OAAA,SAAAQ,GAJD,IAAIC,EAAS,OAYJnC,OAbbkC,GAAAE,KAAAC,MAAAH,KASHC,EAAA,QAIsBR,EAAOW,aAAUV,OAASW,EAA1BZ,CAA/BO,QAQA,IAAWM,EAAX,IAAgCC,MAAAA,OAEhCH,UAAAV,EAAAW,WACOG,EAAkB,CACtBC,YAAAf,EAAAe,YACHC,UAAAhB,EAAAiB,MACU7C,QAAQ4B,EAAAkB,SAGRlB,KAAAA,MAASE,KAAfiB,EAAAN,GAGC5B,OAAYmC,UAAjBC,KAAAC,GAAA,cAAApC,KAAAqC,kBAAAC,KAAAtC,WACYkB,CA1CpB,IAAAgB,EAAAhD,MAAAqD,EAAA,iCAgDA,IAAqBC,GAArB1B,QAAA,IAAAA,EAAAE,QAhGmCkB,EAAApB,EAAAE,OAAAhB,KAAAD,OAAA0C,KAAAP,GAuG9BlC,KAAWD,OAAAmB,YAAA,aAIrBlB,KAAAP,QAAAiD,KAAA,UAAAN,GAAA,UAAApC,KAAA2C,QAAAL,KAAAtC,OAGCI,MAAajB,eAAEqD,UAAeI,KAAA5C,OAG1BqC,kBAAA,WANLrC,KAAAY,MAAAiC,UAWEF,QAAA,WAtHLzD,MAAAC,eAAAqD,UAAAM,OAAA7D,EAAA8D,QAAA/C,KAAAd,MAAAC,eAAAqD,WAAA,GAHJxC,KAAAgD,SA8GO,CACCR,UAAW,GAEXpC,cAAe,SAAS6C,GACpB,IAAIC,EAAO,IAAI5C,KAEf,OADA4C,EAAOA,EAAKC,UAAa,MAAeF,EAAO,IACxC,IAAI3C,KAAK4C,IAGpB1C,aAAc,SAAS0C,GACnB,OAAO5B,KAAK8B,MAAMF,EAAKC,UAAY,QAxH/C,CA2HGE","file":"NewUsersWidget.min.js","sourcesContent":["(function($) {\n    /** global: Craft */\n    /** global: Garnish */\n    Craft.NewUsersWidget = Garnish.Base.extend({\n        settings: null,\n        data: null,\n        startDate: null,\n        endDate: null,\n\n        $widget: null,\n        $body: null,\n\n        init: function(widgetId, settings) {\n            this.setSettings(settings);\n\n            this.$widget = $('#widget' + widgetId);\n            this.$body = this.$widget.find('.body:first');\n            this.$chartContainer = $('<div class=\"chart hidden\"></div>').appendTo(this.$body);\n            this.$error = $('<div class=\"error\"/>').appendTo(this.$body);\n\n            var dateRange = this.settings.dateRange;\n\n            switch (dateRange) {\n                case 'd7':\n                    this.startDate = Craft.NewUsersWidget.getDateByDays(6);\n                    this.endDate = new Date();\n                    break;\n\n                case 'd30':\n                    this.startDate = Craft.NewUsersWidget.getDateByDays(30);\n                    this.endDate = new Date();\n                    break;\n\n                case 'lastweek':\n                    this.startDate = Craft.NewUsersWidget.getDateByDays(13);\n                    this.endDate = Craft.NewUsersWidget.getDateByDays(7);\n                    break;\n\n                case 'lastmonth':\n                    this.startDate = Craft.NewUsersWidget.getDateByDays(60);\n                    this.endDate = Craft.NewUsersWidget.getDateByDays(30);\n                    break;\n            }\n\n            // Request orders report\n            var requestData = {\n                startDate: Craft.NewUsersWidget.getDateValue(this.startDate),\n                endDate: Craft.NewUsersWidget.getDateValue(this.endDate),\n                userGroupId: this.settings.userGroupId\n            };\n\n            Craft.postActionRequest('charts/get-new-users-data', requestData, (response, textStatus) => {\n                if (textStatus === 'success' && typeof (response.error) === 'undefined') {\n                    this.$chartContainer.removeClass('hidden');\n\n                    // Create chart\n                    this.chart = new Craft.charts.Area(this.$chartContainer, {\n                        yAxis: {\n                            formatter: function(chart) {\n                                return function(d) {\n                                    var format = ',.0f';\n\n                                    if (d != Math.round(d)) {\n                                        format = ',.1f';\n                                    }\n\n                                    return chart.formatLocale.format(format)(d);\n                                };\n                            }\n                        }\n                    });\n\n                    var chartDataTable = new Craft.charts.DataTable(response.dataTable);\n\n                    var chartSettings = {\n                        orientation: response.orientation,\n                        dataScale: response.scale,\n                        formats: response.formats\n                    };\n\n                    this.chart.draw(chartDataTable, chartSettings);\n\n                    // Resize chart when grid is refreshed\n                    window.dashboard.grid.on('refreshCols', this.handleGridRefresh.bind(this));\n                } else {\n                    // Error\n                    var msg = Craft.t('A server error occurred.');\n\n                    if (typeof (response) !== 'undefined' && response && typeof (response.error) !== 'undefined') {\n                        msg = response.error;\n                    }\n\n                    this.$error.html(msg);\n                    this.$error.removeClass('hidden');\n                }\n            });\n\n            this.$widget.data('widget').on('destroy', this.destroy.bind(this));\n\n            Craft.NewUsersWidget.instances.push(this);\n        },\n\n        handleGridRefresh: function() {\n            this.chart.resize();\n        },\n\n        destroy: function() {\n            Craft.NewUsersWidget.instances.splice($.inArray(this, Craft.NewUsersWidget.instances), 1);\n            this.base();\n        }\n    }, {\n        instances: [],\n\n        getDateByDays: function(days) {\n            var date = new Date();\n            date = date.getTime() - (60 * 60 * 24 * days * 1000);\n            return new Date(date);\n        },\n\n        getDateValue: function(date) {\n            return Math.floor(date.getTime() / 1000);\n        }\n    });\n})(jQuery);\n"]}