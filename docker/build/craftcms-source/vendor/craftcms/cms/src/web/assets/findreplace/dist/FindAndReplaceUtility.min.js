!function(t){Craft.FindAndReplaceUtility=Garnish.Base.extend({$trigger:null,$form:null,init:function(s){this.$form=t("#"+s),this.$trigger=t("input.submit",this.$form),this.$status=t(".utility-status",this.$form),this.addListener(this.$form,"submit","onSubmit")},onSubmit:function(s){s.preventDefault(),this.$trigger.hasClass("disabled")||(this.progressBar?this.progressBar.resetProgressBar():this.progressBar=new Craft.ProgressBar(this.$status),this.progressBar.$progressBar.removeClass("hidden"),this.progressBar.$progressBar.velocity("stop").velocity({opacity:1},{complete:()=>{var s=Garnish.getPostData(this.$form),r=Craft.expandPostArray(s),e={params:r};Craft.postActionRequest(r.action,e,(t,s)=>{t&&t.error&&alert(t.error),this.updateProgressBar(),setTimeout(this.onComplete.bind(this),300)},{complete:t.noop})}}),this.$allDone&&this.$allDone.css("opacity",0),this.$trigger.addClass("disabled"),this.$trigger.trigger("blur"))},updateProgressBar:function(){this.progressBar.setProgressPercentage(100)},onComplete:function(){this.$allDone||(this.$allDone=t('<div class="alldone" data-icon="done" />').appendTo(this.$status),this.$allDone.css("opacity",0)),this.progressBar.$progressBar.velocity({opacity:0},{duration:"fast",complete:()=>{this.$allDone.velocity({opacity:1},{duration:"fast"}),this.$trigger.removeClass("disabled"),this.$trigger.trigger("focus")}}),Craft.cp.trackJobProgress(!1,!0)}})}(jQuery);
//# sourceMappingURL=FindAndReplaceUtility.min.js.map
