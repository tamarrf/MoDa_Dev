{"version":3,"sources":["findreplace/src/FindAndReplaceUtility.js"],"names":["$","Craft","FindAndReplaceUtility","Garnish","Base","extend","$trigger","$form","init","formId","$status","this","addListener","onSubmit","hasClass","ev","preventDefault","progressBar","$progressBar","resetProgressBar","ProgressBar","removeClass","postData","velocity","params","data","complete","getPostData","postActionRequest","action","response","error","onComplete","textStatus","noop","updateProgressBar","setTimeout","bind","$allDone","css","addClass","trigger","duration","appendTo","opacity","cp","trackJobProgress","jQuery"],"mappings":"CAAA,SAACA,GACGC,MAAMC,sBAAwBC,QAAQC,KAAKC,OAAO,CAC9CC,SAD8C,KAE9CC,MAF8C,KAK1CC,KAAKD,SAAUE,GACVH,KAAAA,MAAaN,EAAA,IAAAS,GACbC,KAAAA,SAAYV,EAAA,eAAmBW,KAAKJ,OAEpCK,KAAAA,QAAYZ,EAAKO,kBAAiBI,KAAAJ,OAGnCI,KAAEC,YAAaD,KAAAJ,MAAA,SAAA,aAGnBM,SAAUP,SAASQ,GACXC,EAACC,iBAEEL,KAAAL,SAAAQ,SAAA,cACEG,KAALA,YAGCA,KAAYC,YAAjBC,mBAFCR,KAAAM,YAAA,IAAAhB,MAAAmB,YAAAT,KAAAD,SAMEC,KAAAM,YAAAC,aAAAG,YAAA,UAESC,KAAAA,YAAWnB,aAAAoB,SAAyBhB,QAAxCgB,SAAA,CACIC,QAASvB,GAETwB,CACMC,SAAEF,KADZ,IAAAF,EAAAnB,QAAAwB,YAAAhB,KAAAJ,OAIMqB,EAAkBJ,MAAOK,gBAAeC,GAEhCA,EAASC,CAClBP,OAAAA,GAISvB,MAAM+B,kBAAgBR,EAAOK,OAAvCJ,EAAA,CAAAK,EAAAG,KACDH,GAAAA,EAAAC,OACaG,MAAAA,EAAAA,OApBxBvB,KAAAwB,oBAyBmBC,WAAAzB,KAAAqB,WAAAK,KAAA1B,MAAA,MACf,CACHe,SAAA1B,EAAAkC,UAnDqCvB,KAAA2B,UA0D9CH,KAAmBG,SAAAC,IAAW,UAAA,GA1DgB5B,KAAAL,SAAAkC,SAAA,YA+DlC7B,KAAAL,SAAWmC,QAAA,UAIlBN,kBAAA,WAEIlB,KAAAA,YAAYC,sBAVL,MAWRwB,WAAU,WACF/B,KAAE2B,WACDA,KAAAA,SAALtC,EAAuB,4CAAA2C,SAAAhC,KAAAD,SAACkC,KAASN,SAAAC,IAAA,UAAA,IAAjC5B,KAAAM,YAAAC,aAAAK,SAAA,CAAAqB,QAAA,GAAA,CACKtC,SAASe,OACTf,SAASmC,KACjB9B,KAAA2B,SAAAf,SAAA,CAAAqB,QAAA,GAAA,CAAAF,SAAA,SAGL/B,KAAAL,SAAAe,YAAA,YAJQV,KAAKL,SAASmC,QAAQ,YAK9BxC,MAAM4C,GAAGC,kBAAiB,GAAO,MAhF7C,CAmFGC","file":"FindAndReplaceUtility.min.js","sourcesContent":["(function($) {\n    Craft.FindAndReplaceUtility = Garnish.Base.extend({\n        $trigger: null,\n        $form: null,\n\n        init: function(formId) {\n            this.$form = $('#' + formId);\n            this.$trigger = $('input.submit', this.$form);\n            this.$status = $('.utility-status', this.$form);\n\n            this.addListener(this.$form, 'submit', 'onSubmit');\n        },\n\n        onSubmit: function(ev) {\n            ev.preventDefault();\n\n            if (!this.$trigger.hasClass('disabled')) {\n                if (!this.progressBar) {\n                    this.progressBar = new Craft.ProgressBar(this.$status);\n                } else {\n                    this.progressBar.resetProgressBar();\n                }\n\n                this.progressBar.$progressBar.removeClass('hidden');\n\n                this.progressBar.$progressBar.velocity('stop').velocity({\n                    opacity: 1\n                }, {\n                    complete: () => {\n                        var postData = Garnish.getPostData(this.$form),\n                            params = Craft.expandPostArray(postData);\n\n                        var data = {\n                            params: params\n                        };\n\n                        Craft.postActionRequest(params.action, data, (response, textStatus) => {\n                            if (response && response.error) {\n                                alert(response.error);\n                            }\n\n                            this.updateProgressBar();\n\n                            setTimeout(this.onComplete.bind(this), 300);\n                        }, {\n                            complete: $.noop\n                        });\n                    },\n                });\n\n                if (this.$allDone) {\n                    this.$allDone.css('opacity', 0);\n                }\n\n                this.$trigger.addClass('disabled');\n                this.$trigger.trigger('blur');\n            }\n        },\n\n        updateProgressBar: function() {\n            var width = 100;\n            this.progressBar.setProgressPercentage(width);\n        },\n\n        onComplete: function() {\n            if (!this.$allDone) {\n                this.$allDone = $('<div class=\"alldone\" data-icon=\"done\" />').appendTo(this.$status);\n                this.$allDone.css('opacity', 0);\n            }\n\n            this.progressBar.$progressBar.velocity({opacity: 0}, {\n                duration: 'fast',\n                complete: () => {\n                    this.$allDone.velocity({opacity: 1}, {duration: 'fast'});\n                    this.$trigger.removeClass('disabled');\n                    this.$trigger.trigger('focus');\n                },\n            });\n\n            // Just in case the tool created a new task...\n            Craft.cp.trackJobProgress(false, true);\n        }\n    });\n})(jQuery);\n"]}